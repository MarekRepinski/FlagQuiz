package se.ctescape.flagquiz.data

import android.content.Context
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch

class FillDataBase(val context: Context) {
    private val repository : FQRepository
    var finished = false

    init {
        val dao = FQdatabase.getDatabase(context).FQdao()
        repository = FQRepository(dao)
        println("AIK!! Filling Database")
        CoroutineScope(Dispatchers.IO).launch {
            repository.deleteAllFQdata()
            var tempInt = repository.getCount()
            println("AIK!! getCount() = ${tempInt}")
            if (tempInt == 0){
                var tempFQ = FQdata(0, "Sweden", "Sverige", "Szwecja", "se", "scandinavia")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Norway", "Norge", "Norwegia", "no", "scandinavia")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Denmark", "Danmark", "Dania", "dk", "scandinavia")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Finland", "Finland", "Finlandia", "fi", "scandinavia")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Iceland", "Island", "Islandia", "is", "scandinavia")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Albania", "Albanien", "Albania", "al", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Andorra", "Andorra", "Andora", "ad", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Belgium", "Belgien", "Belgia", "be", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Bosnia", "Bosnien", "Bośnia", "ba", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Bulgaria", "Bulgarien", "Bułgaria", "bg", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Estonia", "Estland", "Estonia", "ee", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"France", "Frankrike", "Francja", "fr", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Georgia", "Georgien", "Gruzja", "ge", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Greece", "Grekland", "Grecja", "gr", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Ireland", "Irland", "Irlandia", "ie", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Italy", "Italien", "Włochy", "it", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Croatia", "Kroatien", "Chorwacja", "hr", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Latvia", "Lettland", "Łotwa", "lv", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Liechtenstein", "Liechtenstein", "Liechtenstein", "li", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Lithuania", "Litauen", "Litwa", "lt", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Luxembourg", "Luxemburg", "Luksemburg", "lu", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Malta", "Malta", "Malta", "mt", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Moldova", "Moldavien", "Moldova", "md", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Monaco", "Monaco", "Monako", "mc", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Montenegro", "Montenegro", "Czarnogóra", "me", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Netherlands", "Nederländerna", "Holandia", "nl", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Northern Macedonia", "Nordmakedonien", "Macedonia Północna", "mk", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Poland", "Polen", "Polska", "pl", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Portugal", "Portugal", "Portugalia", "pt", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Romania", "Rumänien", "Rumunia", "ro", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Russia", "Ryssland", "Rosja", "ru", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"San Marino", "San Marino", "San Marino", "sm", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Switzerland", "Schweiz", "Szwajcaria", "ch", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Serbia", "Serbien", "Serbia", "rs", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Slovakia", "Slovakien", "Słowacja", "sk", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Slovenia", "Slovenien", "Słowenia", "si", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Spain", "Spanien", "Hiszpania", "es", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Great Britain", "Storbritannien", "Britania", "gb", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Czech Republic", "Tjeckien", "Republika Czeska", "cz", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Germany", "Tyskland", "Niemcy", "de", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Ukraine", "Ukraina", "Ukraina", "ua", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Hungary", "Ungern", "Węgry", "hu", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Vatican City State", "Vatikanstaten", "Państwo Watykańskie", "va", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Belarus", "Vitryssland", "Białoruś", "by", "europe")
                repository.addFQdata(tempFQ)
                tempFQ = FQdata(0,"Austria", "Österrike", "Austria", "at", "europe")
                repository.addFQdata(tempFQ)
            }
            tempInt = repository.getCount()
            println("AIK!! getCount() = ${tempInt} - After")
            finished = true
        }
    }
}